"""
Задания 5-го дня
"""


def main():
    task_list = [task_1,
                 task_2,
                 task_3,
                 task_4,
                 task_5]

    for task in task_list:
        print(task.__doc__)
        task()


def task_1():
    """
    1) Задайте переменной a значение 20, переменной b значение 10. Выведите на экран текст:
    в случае если b больше a “Вторая переменная больше”
    в противном случае “Первая переменная больше”
    """

    a = 20
    b = 10

    if b > a:
        print("Вторая переменная больше")
    else:
        print("“Первая переменная больше”")


def task_2():
    """
    2) В вашем распоряжении список mylist_42, состоящий из 4-х значений: 1,2,4,8.
    Выполните команду для определения списка, напечатайте его.
    Напишите команду для добавления к этому списку значения 16, снова напечатайте список.
    """

    mylist_42 = [1, 2, 4, 8]
    print(mylist_42)

    mylist_42.append(16)
    print(16)


def task_3():
    """
    3) Возьмите список mylist_42, состоящий из 4-х значений: 1,2,4,8 из предыдущего задания.
    Замените второй элемент списка на значение 3, напечатайте список.
    """
    mylist_42 = [1, 2, 4, 8]

    mylist_42[1] = 3  # второй элемент списка имеет индекс 1
    print(mylist_42)


def task_4():
    """
    4) Напишите команду для печати на экран списка из последовательности от 1 до 7
    """

    print(list(range(1, 8)))


def task_5():
    """
    5) В вашем распоряжении список example_list, состоящий из значений: 15, 100, 30, 200.
    Выполните команду для определения списка, напишите функцию mysumming, в которой
    суммируются все значения списка по циклу и возвращается итоговый результат.
    Напечатайте результат выполнения функции.
    """
    example_list = [15, 100, 30, 200]
    print(mysumming(example_list))


def mysumming(list_: list) -> int:
    """
    Функция для суммирования всех числел списка

    :param list_: список для суммирования
    :return: результат суммирования
    """

    sum_ = 0
    for value in list_:
        sum_ += value

    return sum_


if __name__ == '__main__':
    main()
